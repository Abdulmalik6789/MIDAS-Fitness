@model MIDAS_Fitness.Models.BlogPost
@{
    ViewData["Title"] = Model.Title;
    var relatedPosts = ViewBag.RelatedPosts as List<MIDAS_Fitness.Models.BlogPost>;
}

<div class="bg-gray-100 min-h-screen pb-12">
    <!-- Article Header -->
    <div class="bg-gradient-to-r from-gray-900 to-red-800 text-white">
        <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
            <div class="text-center">
                <div class="inline-block">
                    <a href="@Url.Action("Category", "Blog", new { category = Model.Category })"
                       class="inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-red-100 text-red-800">
                        @Model.Category
                    </a>
                </div>
                <h1 class="mt-4 text-3xl font-extrabold tracking-tight sm:text-4xl">
                    @Model.Title
                </h1>
                <div class="mt-6 flex items-center justify-center">
                    <div class="flex-shrink-0">
                        <span class="sr-only">@Model.Author</span>
                        <div class="h-10 w-10 rounded-full bg-red-200 text-red-800 flex items-center justify-center font-bold">
                            @(Model.Author.Length > 0 ? Model.Author[0].ToString() : "")
                        </div>
                    </div>
                    <div class="ml-3 text-left">
                        <p class="text-sm font-medium text-white">
                            @Model.Author
                        </p>
                        <div class="flex space-x-1 text-sm text-red-200">
                            <time datetime="@Model.PublishedDate.ToString("yyyy-MM-dd")">
                                @Model.FormattedDate
                            </time>
                            <span aria-hidden="true">&middot;</span>
                            <span>@(Model.Content.Length / 5 / 60) min read</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Wave Divider -->
        <div class="relative h-16 sm:h-24">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" class="absolute bottom-0 w-full">
                <path fill="#f3f4f6" fill-opacity="1" d="M0,96L48,112C96,128,192,160,288,160C384,160,480,128,576,122.7C672,117,768,139,864,149.3C960,160,1056,160,1152,138.7C1248,117,1344,75,1392,53.3L1440,32L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
            </svg>
        </div>
    </div>

    <!-- Article Content -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 -mt-8">
        <div class="bg-white rounded-xl shadow-lg overflow-hidden">
            <!-- Featured Image -->
            <div class="w-full">
                <img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/images/blog/default.jpg" : Model.ImageUrl)"
                     alt="@Model.Title"
                     class="w-full h-64 sm:h-96 object-cover" />
            </div>

            <!-- Content -->
            <div class="px-4 sm:px-6 lg:px-8 py-8">
                <div class="prose prose-lg max-w-none">
                    @{
                        var paragraphs = Model.Content.Split(new[] { "\n\n" }, StringSplitOptions.RemoveEmptyEntries);
                        foreach (var paragraph in paragraphs)
                        {
                            if (paragraph.StartsWith("- "))
                            {
                                <ul class="list-disc pl-5 my-4">
                                    @foreach (var item in paragraph.Split(new[] { "\n- " }, StringSplitOptions.RemoveEmptyEntries))
                                    {
                                        <li>@item.TrimStart('-', ' ')</li>
                                    }
                                </ul>
                            }
                            else if (paragraph.Contains(":"))
                            {
                                var parts = paragraph.Split(':', 2);
                                <h3 class="text-xl font-bold mt-6 mb-3">@parts[0]</h3>
                                <p>@parts[1]</p>
                            }
                            else
                            {
                                <p class="mb-4">@paragraph</p>
                            }
                        }
                    }
                </div>


                <!-- Share Buttons -->
                <div class="mt-8 border-t border-gray-200 pt-8">
                    <h3 class="text-lg font-medium text-gray-900">Share this article</h3>
                    <div class="mt-4 flex space-x-6">
                        <a href="#" class="text-gray-400 hover:text-red-500">
                            <span class="sr-only">Facebook</span>
                            <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                <path fill-rule="evenodd" d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" clip-rule="evenodd" />
                            </svg>
                        </a>
                        <a href="#" class="text-gray-400 hover:text-red-500">
                            <span class="sr-only">Twitter</span>
                            <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                            </svg>
                        </a>
                        <a href="#" class="text-gray-400 hover:text-red-500">
                            <span class="sr-only">LinkedIn</span>
                            <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                <path fill-rule="evenodd" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Related Articles -->
        @if (relatedPosts != null && relatedPosts.Any())
        {
            <div class="mt-12">
                <h2 class="text-2xl font-bold text-gray-900">Related Articles</h2>
                <div class="mt-6 grid md:grid-cols-3 gap-8">
                    @foreach (var post in relatedPosts)
                    {
                        <div class="bg-white rounded-xl shadow-md overflow-hidden flex flex-col">
                            <div class="flex-shrink-0">
                                <img src="@(string.IsNullOrEmpty(post.ImageUrl) ? "/images/blog/default.jpg" : post.ImageUrl)"
                                     alt="@post.Title"
                                     class="h-48 w-full object-cover" />
                            </div>
                            <div class="flex-1 p-6 flex flex-col justify-between">
                                <div class="flex-1">
                                    <p class="text-sm font-medium text-red-600">
                                        @post.Category
                                    </p>
                                    <a href="@Url.Action("Detail", "Blog", new { id = post.Id })" class="block mt-2">
                                        <p class="text-xl font-semibold text-gray-900 hover:text-red-600">
                                            @post.Title
                                        </p>
                                    </a>
                                </div>
                                <div class="mt-4">
                                    <a href="@Url.Action("Detail", "Blog", new { id = post.Id })"
                                       class="text-base font-semibold text-red-600 hover:text-red-500">
                                        Read more →
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Back to Blog -->
        <div class="mt-12 text-center">
            <a href="@Url.Action("Index", "Blog")"
               class="inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                ← Back to Blog
            </a>
        </div>
    </div>
</div>